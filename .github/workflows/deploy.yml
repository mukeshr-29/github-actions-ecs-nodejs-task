name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/c1z5d8e5
    - name: Build Docker image
      run: docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
      env:
        IMAGE_TAG: latest

    - name: Push Docker image to ECR
      run: docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
      env:
        IMAGE_TAG: latest

    - name: Describe ECS Task Definition
      run: |
        TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${{ secrets.TASK_FAMILY }})
        echo "Current Task Definition: $TASK_DEFINITION"

    - name: Set up AWS CLI
      run: |
          sudo apt-get update
          sudo apt-get install -y awscli

    - name: Describe ECS Task Definition
      id: describe-task
      run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${{ secrets.TASK_FAMILY }} | jq -r '.taskDefinition')
          echo "::set-output name=task_definition::$TASK_DEFINITION"

    - name: Update Task Definition with New Image
      id: update-task-def
      run: |
          NEW_TASK_DEFINITION=$(echo "${{ steps.describe-task.outputs.task_definition }}" | jq --arg IMAGE "${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ secrets.IMAGE_TAG }}" '
          {
            family: .family,
            networkMode: .networkMode,
            containerDefinitions: (.containerDefinitions | map(.image = $IMAGE)),
            requiresCompatibilities: .requiresCompatibilities,
            cpu: .cpu,
            memory: .memory,
            executionRoleArn: .executionRoleArn,
            taskRoleArn: .taskRoleArn,
            networkConfiguration: .networkConfiguration,
            volumes: .volumes,
            placementConstraints: .placementConstraints,
            tags: .tags
          }')
          echo "$NEW_TASK_DEFINITION" > new-task-def.json

    - name: Register New Task Definition
      run: |
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

    - name: Get New Task Definition Revision
      id: get-new-revision
      run: |
          NEW_REVISION=$(aws ecs describe-task-definition --task-definition ${{ secrets.TASK_FAMILY }} | jq -r '.taskDefinition.revision')
          echo "::set-output name=new_revision::$NEW_REVISION"

    - name: Update ECS Service
      run: |
          aws ecs update-service --cluster ${{ secrets.CLUSTER_NAME }} --service ${{ secrets.SERVICE_NAME }} --task-definition ${{ secrets.TASK_FAMILY }}:${{ steps.get-new-revision.outputs.new_revision }} --force-new-deployment